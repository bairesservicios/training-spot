<?php

/**
 * BaseAbstractClass
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $place_id
 * @property integer $class_type_id
 * @property enum $day_of_the_week
 * @property enum $start_hour
 * @property enum $end_hour
 * @property enum $start_min
 * @property enum $end_min
 * @property Place $Place
 * @property ClassType $ClassType
 * @property Doctrine_Collection $Clients
 * @property Doctrine_Collection $Coaches
 * @property Doctrine_Collection $ClassesPerClient
 * @property Doctrine_Collection $ClassesPerCoach
 * 
 * @method integer             getId()               Returns the current record's "id" value
 * @method integer             getPlaceId()          Returns the current record's "place_id" value
 * @method integer             getClassTypeId()      Returns the current record's "class_type_id" value
 * @method enum                getDayOfTheWeek()     Returns the current record's "day_of_the_week" value
 * @method enum                getStartHour()        Returns the current record's "start_hour" value
 * @method enum                getEndHour()          Returns the current record's "end_hour" value
 * @method enum                getStartMin()         Returns the current record's "start_min" value
 * @method enum                getEndMin()           Returns the current record's "end_min" value
 * @method Place               getPlace()            Returns the current record's "Place" value
 * @method ClassType           getClassType()        Returns the current record's "ClassType" value
 * @method Doctrine_Collection getClients()          Returns the current record's "Clients" collection
 * @method Doctrine_Collection getCoaches()          Returns the current record's "Coaches" collection
 * @method Doctrine_Collection getClassesPerClient() Returns the current record's "ClassesPerClient" collection
 * @method Doctrine_Collection getClassesPerCoach()  Returns the current record's "ClassesPerCoach" collection
 * @method AbstractClass       setId()               Sets the current record's "id" value
 * @method AbstractClass       setPlaceId()          Sets the current record's "place_id" value
 * @method AbstractClass       setClassTypeId()      Sets the current record's "class_type_id" value
 * @method AbstractClass       setDayOfTheWeek()     Sets the current record's "day_of_the_week" value
 * @method AbstractClass       setStartHour()        Sets the current record's "start_hour" value
 * @method AbstractClass       setEndHour()          Sets the current record's "end_hour" value
 * @method AbstractClass       setStartMin()         Sets the current record's "start_min" value
 * @method AbstractClass       setEndMin()           Sets the current record's "end_min" value
 * @method AbstractClass       setPlace()            Sets the current record's "Place" value
 * @method AbstractClass       setClassType()        Sets the current record's "ClassType" value
 * @method AbstractClass       setClients()          Sets the current record's "Clients" collection
 * @method AbstractClass       setCoaches()          Sets the current record's "Coaches" collection
 * @method AbstractClass       setClassesPerClient() Sets the current record's "ClassesPerClient" collection
 * @method AbstractClass       setClassesPerCoach()  Sets the current record's "ClassesPerCoach" collection
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAbstractClass extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('abstract_class');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('place_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('class_type_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('day_of_the_week', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 0,
              1 => 1,
              2 => 2,
              3 => 3,
              4 => 4,
              5 => 5,
              6 => 6,
             ),
             'default' => 0,
             ));
        $this->hasColumn('start_hour', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 7,
              1 => 8,
              2 => 9,
              3 => 10,
              4 => 11,
              5 => 12,
              6 => 13,
              7 => 14,
              8 => 15,
              9 => 16,
              10 => 17,
              11 => 18,
              12 => 19,
              13 => 20,
              14 => 21,
              15 => 22,
              16 => 23,
              17 => 24,
             ),
             'default' => 7,
             ));
        $this->hasColumn('end_hour', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 7,
              1 => 8,
              2 => 9,
              3 => 10,
              4 => 11,
              5 => 12,
              6 => 13,
              7 => 14,
              8 => 15,
              9 => 16,
              10 => 17,
              11 => 18,
              12 => 19,
              13 => 20,
              14 => 21,
              15 => 22,
              16 => 23,
              17 => 24,
             ),
             'default' => 7,
             ));
        $this->hasColumn('start_min', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 0,
              1 => 5,
              2 => 10,
              3 => 15,
              4 => 20,
              5 => 25,
              6 => 30,
              7 => 35,
              8 => 40,
              9 => 45,
              10 => 50,
              11 => 55,
             ),
             'default' => 0,
             ));
        $this->hasColumn('end_min', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 0,
              1 => 5,
              2 => 10,
              3 => 15,
              4 => 20,
              5 => 25,
              6 => 30,
              7 => 35,
              8 => 40,
              9 => 45,
              10 => 50,
              11 => 55,
             ),
             'default' => 0,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Place', array(
             'local' => 'place_id',
             'foreign' => 'id'));

        $this->hasOne('ClassType', array(
             'local' => 'class_type_id',
             'foreign' => 'id'));

        $this->hasMany('Client as Clients', array(
             'refClass' => 'ClassPerClient',
             'local' => 'abstract_class_id',
             'foreign' => 'client_id'));

        $this->hasMany('Coach as Coaches', array(
             'refClass' => 'ClassPerCoach',
             'local' => 'abstract_class_id',
             'foreign' => 'coach_id'));

        $this->hasMany('ClassPerClient as ClassesPerClient', array(
             'local' => 'id',
             'foreign' => 'abstract_class_id'));

        $this->hasMany('ClassPerCoach as ClassesPerCoach', array(
             'local' => 'id',
             'foreign' => 'abstract_class_id'));
    }
}