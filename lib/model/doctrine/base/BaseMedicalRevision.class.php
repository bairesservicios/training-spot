<?php

/**
 * BaseMedicalRevision
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $client_id
 * @property date $date
 * @property boolean $passed
 * @property string $comments
 * @property Client $Client
 * 
 * @method integer         getClientId()  Returns the current record's "client_id" value
 * @method date            getDate()      Returns the current record's "date" value
 * @method boolean         getPassed()    Returns the current record's "passed" value
 * @method string          getComments()  Returns the current record's "comments" value
 * @method Client          getClient()    Returns the current record's "Client" value
 * @method MedicalRevision setClientId()  Sets the current record's "client_id" value
 * @method MedicalRevision setDate()      Sets the current record's "date" value
 * @method MedicalRevision setPassed()    Sets the current record's "passed" value
 * @method MedicalRevision setComments()  Sets the current record's "comments" value
 * @method MedicalRevision setClient()    Sets the current record's "Client" value
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseMedicalRevision extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('medical_revision');
        $this->hasColumn('client_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('date', 'date', null, array(
             'type' => 'date',
             'notnull' => true,
             ));
        $this->hasColumn('passed', 'boolean', null, array(
             'type' => 'boolean',
             'default' => true,
             ));
        $this->hasColumn('comments', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Client', array(
             'local' => 'client_id',
             'foreign' => 'id'));
    }
}